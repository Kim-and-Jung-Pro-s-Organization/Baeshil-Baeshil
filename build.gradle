plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    id 'com.epages.restdocs-api-spec' version '0.18.2'
}

group = 'pro'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.15.2'

    // Local cache
    implementation 'com.github.ben-manes.caffeine:caffeine'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testRuntimeOnly 'com.h2database:h2'

    // Rest-Assured + Spring REST Docs
    testImplementation 'io.rest-assured:rest-assured:5.3.0'
    implementation 'com.google.guava:guava:32.0.1-android'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testImplementation 'com.epages:restdocs-api-spec-restassured:0.18.2'
}

tasks.named('test') {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

asciidoctor {
    baseDirFollowsSourceFile()
    inputs.dir snippetsDir
    dependsOn test
    attributes('snippets': snippetsDir)
    sources {
        include 'index.adoc'
    }
}

asciidoctor.doFirst {
    delete file('src/main/resources/static/docs')
}

tasks.register('syncDocs', Copy) {
    dependsOn asciidoctor
    from asciidoctor.outputDir
    into file('src/main/resources/static/docs')
}

tasks.named('build') {
    dependsOn 'syncDocs'
}
